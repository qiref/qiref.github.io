<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pprof on 大道至简</title>
    <link>https://qiref.github.io/tags/pprof/</link>
    <description>Recent content in Pprof on 大道至简</description>
    <generator>Hugo</generator>
    <language>cn-zh</language>
    <lastBuildDate>Fri, 23 Feb 2024 15:53:46 +0800</lastBuildDate>
    <atom:link href="https://qiref.github.io/tags/pprof/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go ppfof工具使用</title>
      <link>https://qiref.github.io/post/2024/02/23/go-ppfof%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Fri, 23 Feb 2024 15:53:46 +0800</pubDate>
      <guid>https://qiref.github.io/post/2024/02/23/go-ppfof%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;h2 id=&#34;pprof&#34;&gt;pprof&lt;/h2&gt;&#xA;&lt;p&gt;pprof 是用于可视化和分析性能分析数据的工具;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;runtime/pprof：采集程序（非 Server）的运行数据进行分析&lt;/li&gt;&#xA;&lt;li&gt;net/http/pprof：采集 HTTP Server 的运行时数据进行分析&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;启用方式&#34;&gt;启用方式&lt;/h2&gt;&#xA;&lt;p&gt;在&lt;code&gt;main&lt;/code&gt;函数之前使用启动, &lt;code&gt;DoProfile(6060)&lt;/code&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;&#xA;import (&#xA;    &amp;quot;net/http&amp;quot;&#xA;    _ &amp;quot;net/http/pprof&amp;quot;&#xA;    &amp;quot;strconv&amp;quot;&#xA;)&#xA;&#xA;type ProfileServer struct {&#xA;}&#xA;&#xA;func (this *ProfileServer) DoProfile(port int) {&#xA;    go func() {&#xA;        err := http.ListenAndServe(&amp;quot;:&amp;quot;+strconv.FormatInt(int64(port), 10), nil)&#xA;        if err != nil {&#xA;            log.Errorf(&amp;quot;Failed to do profile on port: %d&amp;quot;, port)&#xA;        } else {&#xA;            log.Infof(&amp;quot;pprof start successfully on port %d&amp;quot;, port)&#xA;        }&#xA;    }()&#xA;}&#xA;  &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl &#39;http://127.0.0.1:6060/debug/pprof/profile&#39; -o profile.20240223&#xA;curl &#39;http://127.0.0.1:6060/debug/pprof/heap&#39; -o heap.20240223&#xA;curl &#39;http://127.0.0.1:6060/debug/pprof/block&#39; -o block.20240223&#xA;curl &#39;http://127.0.0.1:6060/debug/pprof/mutex&#39; -o mutex.20240223&#xA;curl &#39;http://127.0.0.1:6060/debug/pprof/trace&#39; -o trace.20240223&#xA;  &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;输出对应的pprof文件之后, 对文件进行分析;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
