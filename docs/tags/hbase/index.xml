<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HBase on 大道至简</title>
    <link>https://qiref.github.io/tags/hbase/</link>
    <description>Recent content in HBase on 大道至简</description>
    <generator>Hugo</generator>
    <language>cn-zh</language>
    <lastBuildDate>Thu, 11 Jul 2019 00:18:23 +0000</lastBuildDate>
    <atom:link href="https://qiref.github.io/tags/hbase/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SpringBoot HBase</title>
      <link>https://qiref.github.io/post/2019/07/11/springboot-hbase/</link>
      <pubDate>Thu, 11 Jul 2019 00:18:23 +0000</pubDate>
      <guid>https://qiref.github.io/post/2019/07/11/springboot-hbase/</guid>
      <description>&lt;p&gt;摘要:记录自己写的一个基于SpringBoot操作HBase的组件，支持kerberos认证方式访问，本文相当于API文档。&lt;/p&gt;&#xA;&lt;h2 id=&#34;hbase-组件接口文档&#34;&gt;HBase 组件接口文档&lt;/h2&gt;&#xA;&lt;p&gt;源码地址：&lt;a href=&#34;https://github.com/YaoQi17/HBase-Component&#34;&gt;https://github.com/YaoQi17/HBase-Component&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;使用说明&#34;&gt;使用说明&lt;/h2&gt;&#xA;&lt;p&gt;基本概念&lt;/p&gt;&#xA;&lt;p&gt;table: 表&lt;/p&gt;&#xA;&lt;p&gt;columnFamily:列族，一个表下可以有多个列族，但是不建议设置多个列族，HBase建议设计长窄型的表而不是短宽型。&lt;/p&gt;&#xA;&lt;p&gt;qualifier:列，一个列族下可以有多列，一个表中的列可以是不对齐的，但是这样效率不高，同一张表中的列最好是相同的。&lt;/p&gt;&#xA;&lt;p&gt;cell:一列数据下的一个单元格，一个列下可以有多个单元格，根据版本号区分，默认每次读取最新版本的数据，cell下的存储是数据本身。&lt;/p&gt;&#xA;&lt;p&gt;row: 行，多列数据组成一行，一行中有多个qualifier。&lt;/p&gt;&#xA;&lt;p&gt;rowKey: 行健，用于唯一标识一行数据，一行下有多列，行健的设计直接关系到查询的效率。&lt;/p&gt;&#xA;&lt;h3 id=&#34;hbase配置&#34;&gt;HBase配置&lt;/h3&gt;&#xA;&lt;p&gt;以下配置为最基础配置，缺一不可。&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;HBase:&#xA;  conf:&#xA;    quorum: 192.168.80.234:2181,192.168.80.235:2181,192.168.80.241:2181&#xA;    znodeParent: /hbase-unsecure&#xA;    #如果有更多配置，写在config下，例如：&#xA;    #config:&#xA;    #  key: value&#xA;    #  key: value&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;如果需要更多配置，需要在config中配置，以key-value的形式书写。&lt;/p&gt;&#xA;&lt;h3 id=&#34;参数说明&#34;&gt;参数说明&lt;/h3&gt;&#xA;&lt;p&gt;quorum是HBase中zookeeper的配置，znodeParent是HBase配置在zookeeper中的路径。&lt;/p&gt;&#xA;&lt;h2 id=&#34;简单示例&#34;&gt;简单示例&lt;/h2&gt;&#xA;&lt;p&gt;引入组件jar包：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;com.semptian.hbase.component&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;hbase-component&amp;lt;/artifactId&amp;gt;&#xA;    &amp;lt;version&amp;gt;1.0.1-SNAPSHOT&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;在需要的地方注入HBaseOperations接口，该接口的实现类是HBaseTemplate，通过这个类来操作HBase。&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;@Autowired&#xA;    private HBaseOperations hBaseDao;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;查询一条数据，通过rowKey查询：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public void testQueryTable() {&#xA;        Result result = hBaseDao.queryByTableNameAndRowKey(&#xA;            &amp;quot;LBS&amp;quot;, 9223372036854775803L);&#xA;        System.out.println(result.isEmpty());&#xA;        result.listCells().forEach(cell -&amp;gt; {&#xA;            System.out.println(&#xA;            &amp;quot;row:&amp;quot; + Bytes.toLong(CellUtil.cloneRow(cell)) + &#xA;            &amp;quot;,family:&amp;quot;+ Bytes.toString(CellUtil.cloneFamily(cell)) +&#xA;            &amp;quot;, qualifier: &amp;quot; + Bytes.toString(CellUtil.cloneQualifier(cell)) +&#xA;            &amp;quot;, value:&amp;quot; + Bytes.toString(CellUtil.cloneValue(cell)));&#xA;        });&#xA;    }&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;表的基本操作&#34;&gt;表的基本操作&lt;/h2&gt;&#xA;&lt;h3 id=&#34;新建表&#34;&gt;新建表&lt;/h3&gt;&#xA;&lt;p&gt;创建表通过HBaseTemplate就可以实现，HBaseTemplate类中带有这个方法。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
